version: "3.9"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=AI_Seminar_IE3B
    depends_on:
      - db
    networks:
      - app_network

  db:
    image: mysql:8.0
    container_name: mysql2
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: AI_Seminar_IE3B
    ports:
      - "3308:3306"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app_network

  mlapi:
    build:
      context: ./python-ml-api
      dockerfile: Dockerfile.app
    ports:
      - "8000:8000"
    env_file:
      - ./python-ml-api/.env
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DB=AI_Seminar_IE3B
    depends_on:
      - db
    volumes:
      - ml_models:/app/models
    networks:
      - app_network

  trainer:
    build:
      context: ./python-ml-api
      dockerfile: Dockerfile.trainer
    command: python ml_logic/train_models_by_category.py
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
      - MYSQL_DB=AI_Seminar_IE3B
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    depends_on:
      - db
    volumes:
      - ./models:/app/models    
    networks:
      - app_network

volumes:
  mysql_data:
  ml_models:

networks:
  app_network:
    driver: bridge
